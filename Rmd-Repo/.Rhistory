A[4,5:10] = C[5:10]
C = c(5,3.5,5,3.5,4,9,6,8,9,7)
A[1,] = C
A[2,2:10] = C[2:10]
A[3,4:10] = C[4:10]
A[4,5:10] = C[5:10]
A[5,6:10] = C[6:10]
A[6,8:10] = C[8:10]
A[7,9:10] = C[9:10]
A[8,10] = C[10]
A
A[1,1] = A[1,1] + 100
A[8,10] = A[8,10] +100
A[8,10] = C[10]
A[1,1] = A[1,1] + 100
A[2,2] = A[2,2] + 100
A[2,3] = A[2,3] + 100
A[3,4] = A[3,4] + 100
A[4,5] = A[4,5] + 100
A[5,6] = A[5,6] + 100
A[5,7] = A[5,7] + 100
A[6,8] = A[6,8] + 100
A[7,9] = A[7,9] + 100
A[8,10] = A[8,10] +100
A
C = c(5,3.5,5,3.5,4,9,6,8,9,7)
C = c(5,3.5,5,3.5,4,9,6,8,9,7)
A[1,] = C
A[2,2:10] = C[2:10]
A[3,4:10] = C[4:10]
A[4,5:10] = C[5:10]
A[5,6:10] = C[6:10]
A[6,8:10] = C[8:10]
A[7,9:10] = C[9:10]
A[8,10] = C[10]
A[1,1] = A[1,1] + 100
A[2,2] = A[2,2] + 100
A[2,3] = A[2,3] + 100
A[3,4] = A[3,4] + 100
A[4,5] = A[4,5] + 100
A[5,6] = A[5,6] + 100
A[5,7] = A[5,7] + 100
A[6,8] = A[6,8] + 100
A[7,9] = A[7,9] + 100
A[8,10] = A[8,10] +100
A
dir = rep("=",8)
c = rep(1,10)
c = rep(1,10)
s = lp("min",c,A,dir,L)
s$objective
s$objval
s$solution
c = rep(C)
s = lp("min",c,A,dir,L)
s$solution
c = rep(1,10)
s$solution *%*
s$solution *%* 1
dir = rep("=",8)
c = rep(1,10)
s = lp("min",c,A,dir,L)
s$solution
global = function(prices,coupons,maturity,liabilities)
{
if length(prices) = length(coupons)
{
print("yes")
}
}
A
global <- function(prices,coupons,maturity,liabilities) {
Amat = matrix(0,length(liabilities),length(prices))
for(i in 1:length(prices)){
Amat[1:maturity[i],i] = coupons[i]
Amat[maturity[i],i] = Amat[maturity[i],i]+100
}
}
global <- function(prices,coupons,maturity,liabilities) {
Amat = matrix(0,length(liabilities),length(prices))
for(i in 1:length(prices)){
Amat[1:maturity[i],i] = coupons[i]
Amat[maturity[i],i] = Amat[maturity[i],i]+100
}
print(Amat)
}
global(0,0,0,0)
global(c(102,99,101,98,98,104,100,101,102,94),c(5,3.5,5,3.5,4,9,6,8,9,7),
c(1,2,2,3,4,5,5,6,7,8),c(12000,18000,20000,20000,16000,15000,12000,10000))
A
direct = rep("=",length(liabilities))
global <- function(prices,coupons,maturity,liabilities) {
Amat = matrix(0,length(liabilities),length(prices))
for(i in 1:length(prices)){
Amat[1:maturity[i],i] = coupons[i]
Amat[maturity[i],i] = Amat[maturity[i],i]+100
}
direct = rep("=",length(liabilities))
cmat = rep(1,length(prices))
sol = lp("min",cmat,Amat,direct,liabilities)
print(sol$solution)
}
global(c(102,99,101,98,98,104,100,101,102,94),c(5,3.5,5,3.5,4,9,6,8,9,7),
c(1,2,2,3,4,5,5,6,7,8),c(12000,18000,20000,20000,16000,15000,12000,10000))
s$solution
global <- function(prices,coupons,maturity,liabilities) {
Amat = matrix(0,length(liabilities),length(prices))
for(i in 1:length(prices)){
Amat[1:maturity[i],i] = coupons[i]
Amat[maturity[i],i] = Amat[maturity[i],i]+100
}
direct = rep("=",length(liabilities))
cmat = rep(1,length(prices))
sol = lp("min",cmat,Amat,direct,liabilities)
print(sol$solution) + print("hi")
}
global(c(102,99,101,98,98,104,100,101,102,94),c(5,3.5,5,3.5,4,9,6,8,9,7),
c(1,2,2,3,4,5,5,6,7,8),c(12000,18000,20000,20000,16000,15000,12000,10000))
global <- function(prices,coupons,maturity,liabilities) {
Amat = matrix(0,length(liabilities),length(prices))
for(i in 1:length(prices)){
Amat[1:maturity[i],i] = coupons[i]
Amat[maturity[i],i] = Amat[maturity[i],i]+100
}
direct = rep("=",length(liabilities))
cmat = rep(1,length(prices))
sol = lp("min",cmat,Amat,direct,liabilities)
print(sol$solution)
}
global(c(102,99,101,98,98,104,100,101,102,94),c(5,3.5,5,3.5,4,9,6,8,9,7),
c(1,2,2,3,4,5,5,6,7,8),c(12000,18000,20000,20000,16000,15000,12000,10000))
dedicate_g2.R <- function(prices,coupons,maturity,liabilities) {
Amat = matrix(0,length(liabilities),length(prices))
for(i in 1:length(prices)){
Amat[1:maturity[i],i] = coupons[i]
Amat[maturity[i],i] = Amat[maturity[i],i]+100
}
direct = rep("=",length(liabilities))
cmat = rep(1,length(prices))
sol = lp("min",cmat,Amat,direct,liabilities)
print(sol$solution)
}
dedicate_g2.R(c(102,99,101,98,98,104,100,101,102,94),c(5,3.5,5,3.5,4,9,6,8,9,7),
c(1,2,2,3,4,5,5,6,7,8),c(12000,18000,20000,20000,16000,15000,12000,10000))
s$solution
A
Amat = matrix(0,length(liabilities),length(prices))
dedicate_g2.R <- function(prices,coupons,maturity,liabilities) {
Amat = matrix(0,length(liabilities),length(prices))
for(i in 1:length(prices)){
Amat[1:maturity[i],i] = coupons[i]
Amat[maturity[i],i] = Amat[maturity[i],i]+100
}
direct = rep("=",length(liabilities))
cmat = rep(1,length(prices))
sol = lp("min",cmat,Amat,direct,liabilities)
print(Amat)
print(sol$solution)
}
dedicate_g2.R(c(102,99,101,98,98,104,100,101,102,94),c(5,3.5,5,3.5,4,9,6,8,9,7),
c(1,2,2,3,4,5,5,6,7,8),c(12000,18000,20000,20000,16000,15000,12000,10000))
library(quantmod)
getSymbol("AAPL")
getSymbols("AAPL")
plot(AAPL$AAPL.Open)
plot(AAPL$AAPL.Adjusted)
roll_apple = rollapply(AAPL$AAPL.Adjusted, FUN = mean, 5)
plot(roll_apple)
roll_apple = rollapply(AAPL$AAPL.Adjusted, FUN = mean, 10)
plot(roll_apple)
roll_apple = rollapply(AAPL$AAPL.Adjusted, FUN = mean, 15)
plot(roll_apple)
roll_apple = rollapply(AAPL$AAPL.Adjusted, FUN = mean, 25)
plot(roll_apple)
roll_apple = rollapply(AAPL$AAPL.Adjusted, FUN = mean, 40)
plot(roll_apple)
roll_apple = rollapply(AAPL$AAPL.Adjusted, FUN = mean, 50)
plot(roll_apple)
lines(AAPL$AAPL.Adjusted, col = "red")
library(forecast)
auto.arima(roll_apple) %>% forecast() %>% plot()
auto.arima(roll_apple) %>% forecast(, 500) %>% plot()
auto.arima(roll_apple) %>% forecast(,500) %>% plot()
auto.arima(roll_apple) %>% forecast(500) %>% plot()
auto.arima(roll_apple) %>% forecast(50) %>% plot()
auto.arima(roll_apple) %>% forecast(50) %>% plot(col = "red")
auto.arima(roll_apple) %>% forecast(50) %>% plot(col = "green")
auto.arima(AAPL$AAPL.Adjusted) %>% forecast(50) %>% plot(col = "green")
auto.arima(roll_apple) %>% forecast(50) %>% plot(col = "green")
auto.arima(AAPL$AAPL.Adjusted) %>% forecast(50) %>% plot(col = "red")
auto.arima(roll_apple) %>% forecast(50) %>% plot(col = "green")
auto.arima(AAPL$AAPL.Adjusted) %>% forecast(50) %>% lines(col = "red")
auto.arima(roll_apple) %>% forecast(50) %>% plot(col = "green")
auto.arima(AAPL$AAPL.Adjusted) %>% forecast(50) %>% lines(col = "red")
auto.arima(AAPL$AAPL.Adjusted) %>% forecast(50) %>% lines()
auto.arima(AAPL$AAPL.Adjusted) %>% forecast(50) %>% lines(col = "red")
auto.arima(AAPL$AAPL.Adjusted) %>% forecast(50) %>% plot(col = "red")
#q1
c = c(-1,4)
A = matrix(c(-10,5,1,0,20,10,0,1),4,2)
A
b = c(22,49,5,5)
dir = rep("<=",4)
sol = lp("max",c,A,dir,b, all.int = T)
sol$solution
library(lpSolve)
A = matrix(c(-10,5,1,0,20,10,0,1),4,2)
A
b = c(22,49,5,5)
dir = rep("<=",4)
sol = lp("max",c,A,dir,b, all.int = T)
sol$solution
#left branch
b1 = c(22,49,3,5)
sol = lp("max",c,A,dir,b1)
sol$solution
b3 = c(22,49,3,2)
sol = lp("max",c,A,dir,b3)
sol$solution
b7 = c(22,49,1,2)
sol = lp("max",c,A,dir,b7)
sol$solution
b8 = c(22,49,2,2)
sol = lp("max",c,A,c("<=","<=","=","<="),b8)
sol$solution
b5 = c(22,49,3,3)
sol = lp("max",c,A,c("<=","<=","<=",">="),b5)
sol$solution
#right branch
b2 = c(22,49,4,5)
sol = lp("max",c,A,c("<=","<=",">=","<="),b2)
sol$solution
b4 = c(22,49,4,2)
sol = lp("max",c,A,dir,b4)
sol$solution
b9 = c(22,49,1,2)
sol = lp("max",c,A,dir,b9)
sol$solution
b10 = c(22,49,2,2)
sol = lp("max",c,A,c("<=","<=","=","<="),b10)
sol$solution
b6 = c(22,49,4,3)
sol = lp("max",c,A,c("<=","<=","<=",">="),b6)
sol$solution
#q2
c2 = c(9,5,6,4)
bq2 = c(11,1,1)
A = matrix(0,3,4)
A[1,] = c(6,3,5,2)
A[2,] = c(1,1,0,0)
A[3,] = c(0,0,1,1)
A
dir = c("<=",">=","<=")
solution = lp("max",c,A,dir,bq2, all.bin = T)
solution$solution
#q3
Amat = matrix(0,12,12)
Amat
Amat
Amat = diag(12)
Amat
Amat[1,3] = 1
Amat[1,5] = 1
Amat[1,7] = 1
Amat
Amat[1,8] = 1
Amat[1,9] = 1
Amat
Amat[2,8:9] = c(1,1)
Amat
Amat[3,7:9] = c(1,1,1)
Amat
Amat[4,10] = 1
Amat
Amat[5,7] =1
Amat[6,10:11] = rep(1,2)
Amat
Amat[8,9] =1
Amat[10,11:12] = rep(1,2)
Amat[11,12] =1
Amat
c = rep(1,12)
obj = rep(1,12)
dir = rep("<=",12)
sol = lp("min",c,Amat,dir,c,all,bin =T)
sol = lp("min",c,Amat,dir,rep(1,12),all,bin =T)
sol = lp("min",c,Amat,dir,rep(1,12),all.bin =T)
sol$solution
sol = lp("max",c,Amat,dir,rep(1,12),all.bin =T)
sol$solution
Amat[3,1] = 1
Amat[3,3] =1
Amat[5,1] = 1
Amat[7,1] =1
Amat[7,3] = 1
Amat[7,5] =1
Amat[8,1:3] = rep(1,3)
Amat[9,1:3] = rep(1,3)
Amat[9,8] = 1
Amat[10,4] =1
Amat[10,6] =1
Amat[11,6] =1
Amat[11,10] =1
Amat[12,10:11] =1
Amat
c = rep(1,12)
obj = rep(1,12)
dir = rep("<=",12)
sol = lp("max",c,Amat,dir,rep(1,12),all.bin =T)
sol$solution
dir = rep("=",12)
sol = lp("max",c,Amat,dir,rep(1,12),all.bin =T)
sol$solution
#q4
25*233+37*148+54*106
17025/120
142*3
mat = matrix(0,4,426)
mat
head(mat)
#q4
mat = c(25,37,54)
c = c(25,37,54)
sol = lp("max",c,mat,"<=",rep(1,3),all.int = T)
sol$solution
#q4
mat = c(25,37,54)
c = c(25,37,54)
sol = lp("max",c,mat,"<=",rep(1,3),all.int = T)
sol$solution
sol = lp("max",c,mat,"<=",120,all.int = T)
sol$solution
sol$solution
b = c(120)
sol = lp("max",c,mat,"<=",b,all.int = T)
sol$solution
mat = c(25,37,54)
c = c(25,37,54)
b = c(120)
sol = lp("max",c,mat,"<=",b,all.int = T)
sol$solution
mat
c = c(-25,-37,-54)
b = c(120)
sol = lp("max",c,mat,"<=",b,all.int = T)
sol$solution
sol = lp("min",c,mat,"<=",b,all.int = T)
sol$solution
sol$objval
c = c(25,37,54)
sol = lp("min",c,mat,"<=",b,all.int = T)
sol$solution
sol$objval
sol = lp("max",c,mat,"<=",b,all.int = T)
sol$solution
sol$objval
A = matrix(0,4,500)
A
A[1,] =
25*233+37*148+54*106
A[1,] =
25*233+37*148+54*106
25*233+37*148+54*106
17025/120
A = matrix(0,4,142)
A
142/3
142*3
A = matrix(0,4,426)
A[1,] = rep(c(25,37,54),142)
A
A[2,] = rep(c(1,0,0),142)
A[3,] = rep(c(0,1,0),142)
A[4,] = rep(c(0,0,1),142)
A
A[,1]
120*142
b = c(17040,233,148,106)
dir = c("<=","=","=","=")
obj = rep(1,426)
sol = lp("max",obj,A,dir,b, all.int = T)
sol$solution
library(lpsolve)
library(lpSolve)
sunspot.month
sunspot.month
plot(sunspot.month)
library(forecast)
library(quantmod)
data <- (sunspot.month)
plot.xts(data)
library(forecast)
library(quantmod)
plot.xts(data)
data <- (sunspot.month)
plot(data)
data <- (sunspot.month)
plot(data)
plot(data)
plot(data)
plot.xts(data)
head(data)
data <- (sunspot)
data <- (sunspots)
plot(data)
head(data)
?nnetar
autoplot(sunspots)
auto.arima(data)
forecast(auto.arima(data))
plot(forecast(auto.arima(data)))
#nnetar version
plot(forecast(nnetar(data)))
data1 <- data[,1:500]
data1 <- data[1:500]
#auto arima version
plot(forecast(auto.arima(data)))
#auto arima version
plot(forecast(auto.arima(data, seasonal = T, allowdrift = T)))
?nnetar
colnames(m) = LETTERS[1:4]
names(things) = c("b", "a")
sqrt
sqrt(9)
x <- c(1,4,9)
y <- c(1,8,27)
a <- c(1,2,"l")
z <- c(x,y)
z
t(z)
z
seq(1,10,2)
?seq
1:10
-10:0
10:0
seq(1,25,4)
seq(from =1,25,4)
(1:5)^3
q <- c(1,2,3)
e <- c(-1,1,2)
q+e
q*e
q**
e
q**e
q*e
q%*%e
a <- 1:10
b <- 1:5
a+b
b <- 1:4
a+b
a <- seq(0,by=2, length.out = 12)
a
a <- seq(1,by=2, length.out = 12)
a
a <- seq(2,by=2, length.out = 12)
a
t <- c(3,8,24,65)
a <- 2*(1:12)
t <- c(3,8,24,65)
y <- seq(0,10)
o <- c(4,9,14,17)
t <- c(3,8,24,65)
10*t+o
t <- c(3,8,2,6)
o <- c(4,9,1,7)
10*t+o
t[2]
x <- 1:5
x
x[1]
x[2,4]
x[2:4]
x[2;4]
x[c(2,4)]
x[-3]
x[[1]
x[[1]]
x[[1]]
x[c(2,2,3)]
x[1]
x[[1]]
x[2]
x <- list(1:5)
x[2]
x[[2]
x[[2]]
x[[2]]
x <- list(c(1:5))
x[2]
x
a <- c(1,4,9)
print(a)
b <- a^2
print(b)
a
a <- c(1,4,9)
a
b <- a^2
print(b)
log(exp(3)) # natural log
install.packages("knitr")
libary(knitr)
library(knitr)
file.path()
normalizePath()
file.path(GettingStarted.R)
setwd("C:/Users/arunk/Desktop/School")
# Chunk 1
setwd("C:/Users/arunk/Desktop/School")
