library(ggplot2) #the msleep dataset is part of the ggplot2 package
str(msleep)
msleep<-as.data.frame(msleep)
msleep<-as.data.frame(msleep)
Make a scatterplot of sleep_total (y-axis) and sleep_rep (x-axis) with ggplot
```{R}
ggplot(msleep, aes(sleep_total,sleep_rem)) + geom_point()
str(msleep)
msleep<-as.data.frame(msleep)
ggplot(msleep, aes(sleep_total,sleep_rem)) + geom_point() + geom_smooth()
ggplot(msleep, aes(sleep_total,sleep_rem)) + geom_point() + geom_smooth(method="lm")
ggplot(msleep, aes(sleep_total,sleep_rem,size=bodywt, color=vore)) + geom_point()
msleep1<-msleep[!is.na(msleep$vore),] #remove rows where vore==NA
ggplot(msleep1, aes(vore))+geom_bar(stat="count")
ggplot(msleep1, aes(x = vore))+geom_bar() #leave off stat="count"
msleep1$size <- ifelse(msleep1$bodywt < median(msleep1$bodywt), "Small", "Large")
str(msleep1)
msleep1$size <- factor(msleep1$size, levels = c("Small","Large"))
ggplot(msleep1, aes(x = vore, fill=size)) + geom_bar()
ggplot(msleep1, aes(x = vore, fill=size))+
geom_bar(position="dodge")
ggplot(msleep1, aes(x = vore, fill=size))+
geom_bar(position="fill")
ggplot(msleep1, aes(x = size, fill=vore))+
geom_bar(position='fill')
ggplot(msleep1, aes(vore))+
geom_bar(stat="count")
ggplot(msleep1, aes(vore))+
stat_count(geom="bar")
ggplot(msleep1, aes(x = vore))+
geom_bar(aes(y=sleep_total), stat="summary", fun=mean)
ggplot(msleep1, aes(x = vore, y = sleep_total))+
geom_bar(stat="summary",fun=mean)+
geom_errorbar(stat="summary", fun.data=mean_se)
ggplot(msleep1, aes(x = vore, y = sleep_total))+
geom_bar(stat="summary",fun=mean)+
geom_errorbar(stat="summary", fun.data=mean_cl_normal)
install.packages("hmisc")
install.packages("Hmisc")
ggplot(msleep1, aes(x = vore, y = sleep_total))+
geom_bar(stat="summary",fun=mean)+
geom_errorbar(stat="summary", fun.data=mean_cl_normal)
ggplot(msleep1, aes(x = vore, y = sleep_total, fill=size))+
geom_bar(stat="summary", fun=mean, position="dodge")+
geom_errorbar(stat="summary", fun.data=mean_se, position="dodge")
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))
ggplot(msleep1, aes(order)) +
geom_bar(aes(fill=order)) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position="none")
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))+
coord_flip()+
theme(legend.position="none")
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))+
coord_flip()+
stat_summary(geom = "point") +
theme(legend.position="none")
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))+
coord_flip()+
stat_summary(aes(y = bodyweight),geom = "point") +
theme(legend.position="none")
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))+
coord_flip()+
stat_summary(aes(y = weight),geom = "point") +
theme(legend.position="none")
head(msleep1)
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))+
coord_flip()+
stat_summary(aes(y = bodywt),geom = "point") +
theme(legend.position="none")
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))+
coord_flip()+
stat_summary(aes(y = bodywt),geom = "point") +
theme(legend.position="none")
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))+
coord_flip()+
stat_summary(aes(y = bodywt),geom = "point", ) +
theme(legend.position="none")
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))+
coord_flip()+
stat_summary(aes(y = bodywt),geom = "point", fun=mean) +
theme(legend.position="none")
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))+
coord_flip() +
theme(legend.position="none")
ggplot(msleep1, aes(order))+
geom_bar(aes(fill=order))+
stat_summary(aes(y = bodywt),geom = "point", fun=mean) +
coord_flip()+
theme(legend.position="none")
ggplot(msleep1, aes(order))+
stat_summary(aes(y = bodywt),geom = "point", fun=mean) +
coord_flip()+
theme(legend.position="none")
ggplot(msleep1, aes(order))+
stat_summary(aes(y = bodywt),geom = "bar", fun=mean) +
coord_flip()+
theme(legend.position="none")
ggplot(msleep1, aes(order))+
stat_summary(aes(y = bodywt),geom = "bar", fun=mean) +
theme(legend.position="none")
ggplot(msleep1, aes(order))+
stat_summary(aes(y = bodywt, fill = order),geom = "bar", fun=mean) +
theme(legend.position="none")
ggplot(msleep1, aes(order))+
stat_summary(aes(y = bodywt, fill = order),geom = "bar", fun=mean) +
theme(axis.text.x  = element_text(angle=45, hjust = 1), legend.position="none")
ggplot(msleep1, aes(x = size, fill=vore))+
geom_bar(position='fill')
ggplot(msleep1, aes(x = size, fill=vore))+
geom_bar(position='fill')+scale_y_continuous(breaks = seq(0,1,.1))
ggplot(msleep1, aes(x = size, fill=vore))+
geom_bar(position='fill')+scale_y_continuous(breaks=seq(0,1,.1), labels=scales::percent)
ggplot(msleep1, aes(x = size, fill=vore))+
geom_bar(position='fill')+scale_y_continuous(labels=scales::dollar)
ggplot(msleep1, aes(bodywt, brainwt, color=vore))+geom_point() #note the warning! it is dropping missing values!
msleep1[msleep1$bodywt>1000,]
ggplot(msleep1, aes(bodywt, brainwt, color=vore))+geom_point()+
scale_x_continuous(lim=c(0,1000))
ggplot(msleep1, aes(bodywt, brainwt, color=vore))+geom_point()+
scale_x_continuous(lim=c(0,1000))
ggplot(msleep1, aes(bodywt, brainwt, color=vore))+geom_point()+
scale_x_continuous(lim=c(0,1000))+
scale_y_continuous(lim=c(0,2))
ggplot(msleep1, aes(bodywt, brainwt, color=vore))+geom_point()+
xlim(0,1000)+ylim(0,2)
ggplot(msleep1, aes(bodywt, brainwt, color=vore))+geom_point()+
scale_x_log10()+scale_y_log10()
## increase threshold for scientific notation
options(scipen = 999)
ggplot(msleep1, aes(bodywt, brainwt, color=vore))+geom_point()+
scale_x_log10()+scale_y_log10()
ggplot(msleep1, aes(bodywt, brainwt, color=vore))+geom_point()+
coord_trans(x="log10",y="log10")+scale_x_continuous(breaks=seq(0,10000,2500))+
theme(axis.text.x=element_text(angle=90, vjust=.5, hjust=1))
ggplot(msleep1, aes(x = size, fill=vore))+
geom_bar(position='fill')+scale_y_continuous(labels=scales::percent)+
scale_fill_brewer()
RColorBrewer::display.brewer.all()
```{R}
ChickWeight <- as.data.frame(ChickWeight)
head(ChickWeight,10)
length(table(ChickWeight$Chick))
length(table(ChickWeight$Time))
length(table(ChickWeight$Diet))
for (i in 1:4) {
print(paste(nrow(ChickWeight[ChickWeight$Time == 0 & ChickWeight$Diet == i,]), "initial chicks in diet condition", i))
}
library(ggplot2)
ggplot(ChickWeight,aes(Time, weight)) + geom_point() + labs(x = "Time (days)", y = "Chick Weight (grams)", title = "Chick Weight over Time")
ggplot(ChickWeight,aes(Time, weight, color = Chick)) + geom_point() + labs(x = "Time since birth (days)", y = "Chick Weight (grams)", title = "Chick Weight over Time") + geom_line() + theme(legend.position = "none")
ggplot(ChickWeight,aes(Time, weight)) + labs(x = "Time since birth (days)", y = "Chick Weight (grams)", title = "Chick Weight over Time") + geom_line(aes(group = Chick, color = Chick)) + geom_point(color = "white") + theme(legend.position = "none")
ggplot(ChickWeight,aes(Time, weight)) + labs(x = "Time (days)", y = "Chick Weight (grams)", title = "Chick Weight over Time") + geom_line(aes(group = Chick, color = Chick)) + geom_point(color = "white") + theme(legend.position = "none") + facet_wrap(~Diet)
library(ggplot2)
ggplot(ChickWeight,aes(Time, weight, color = Diet)) + geom_point() + geom_smooth(method = "lm", se = F) + labs(x = "Time (days)", y = "Chick Weight (grams)", title = "Chick Weight over Time")
library(ggplot2)
ggplot(ChickWeight, aes(x=Diet, y= weight)) + geom_bar(stat = "summary", fun=mean) + scale_y_continuous(breaks = seq(0,150,by=25), name = "Avg Chick Weight (grams)")
library(ggplot2)
ggplot(ChickWeight, aes(x=Diet, y= weight)) + geom_bar(stat = "summary", fun=mean, aes(fill = Diet)) + scale_fill_brewer() +
geom_errorbar(stat="summary", width = .5)  + scale_y_continuous(breaks = seq(0,150,by=25), name = "Avg Chick Weight (grams)")
library(ggplot2)
ggplot(ChickWeight, aes(x=Diet, y= weight)) + geom_errorbar(stat="summary", width = .5) +
geom_point(color = "red", size = 2) + scale_y_continuous( name = "Avg Chick Weight (grams)")
ggplot(ChickWeight, aes(x=Diet, y= weight)) + geom_errorbar(stat="summary", fun = mean, width = .5) +
geom_point(color = "red", size = 2) + scale_y_continuous( name = "Avg Chick Weight (grams)")
ggplot(ChickWeight, aes(x=Diet, y= weight)) + geom_errorbar(stat="summary", fun = mean_se, width = .5) +
geom_point(color = "red", size = 2) + scale_y_continuous( name = "Avg Chick Weight (grams)")
ggplot(ChickWeight, aes(x=Diet, y= weight)) + geom_errorbar(stat="summary", width = .5) +
geom_point(color = "red", size = 2) + scale_y_continuous( name = "Avg Chick Weight (grams)")
ggplot(ChickWeight, aes(x=Diet, y= weight)) + geom_errorbar(stat="summary", fun=mean_se, width = .5) +
geom_point(color = "red", size = 2) + scale_y_continuous( name = "Avg Chick Weight (grams)")
ggplot(ChickWeight, aes(x=Diet, y= weight)) + geom_errorbar(stat="summary", fun=mean_se(), width = .5) +
geom_point(color = "red", size = 2) + scale_y_continuous( name = "Avg Chick Weight (grams)")
ggplot(ChickWeight, aes(x=Diet, y= weight)) + geom_errorbar(stat="summary", width = .5) +
geom_point(color = "red", size = 2) + scale_y_continuous( name = "Avg Chick Weight (grams)")
library(ggplot2)
ggplot(ChickWeight, aes(x=Diet, y= weight)) + geom_bar(stat = "summary", fun=mean, aes(fill = Diet)) + scale_fill_brewer() +
geom_errorbar(stat="summary", width = .5)  + scale_y_continuous(breaks = seq(0,150,by=25), name = "Avg Chick Weight (grams)")
ggplot(ChickWeight,aes(Time, weight)) + geom_point(aes(color = Diet), alpha =.6, size = 1.5, pch =1) + labs(x = "Time (days)", y = "Chick Weight (grams)", title = "Chick Weight over Time") + stat_summary(fun.y = mean, geom = "point", aes(group = Diet, color = Diet), size = 1.7) + theme_minimal() + scale_color_brewer(palette = "Dark2") + stat_summary(fun.y = mean, geom = "point", alpha = .9, size = 2)
knitr::opts_chunk$set(echo = TRUE)
pie <- read.csv("pie-survey-1.csv")
pielist <- table(pie$What.is.your.favorite.kind.of.pie.)
barplot(pielist)
pie(pielist)
setwd("~/GitHub/arun-krishnaraj.github.io/Rmd-Repo")
cafe <- read.csv("cafedata.csv")
cafe <- read.csv("cafedata-1.csv")
plot(wraps)
plot(cafe$wraps)
plot(cafe$Wraps.Sold)
cafe$Wraps.Sold[cafe$Wraps.Sold != "na"]
wraps <- cafe$Wraps.Sold[cafe$Wraps.Sold != "na"]
wraps <- as.numeric(wraps)
hist(wraps)
x <- runif(n=10000,min=0,max=10)
x_round <- round(x)
ggplot()+geom_bar(aes(x_round))+scale_x_continuous(breaks=0:10)
library(ggplot2)
ggplot()+geom_bar(aes(x_round))+scale_x_continuous(breaks=0:10)
x_floor <- floor(x)
ggplot()+geom_bar(aes(x_floor))+scale_x_continuous(breaks=0:10)
x_ceiling <- ceiling(x)
ggplot()+geom_bar(aes(x_ceiling))+scale_x_continuous(breaks=0:10)
round(runif(5000,-1,11))
sample(0:10,size = 5000, replace = T)
unifs <- runif(5000)
norms <- qnorm(unifs)
mean(norms)
sd(norms)
knitr::opts_chunk$set(echo = TRUE)
eulerIntegrate = function(f, x0, dt, tEnd){
out = data.frame(
t = seq(from=0, to=tEnd, by=dt),
x = x0
)
xNow = x0
for (step in 2:nrow(out)){
dx = f(xNow) * dt
xNow = xNow + dx
out[step, "x"] = xNow
}
return(out)
}
?pnorm()
?pnorm(mean = 68, sd = 14)
pnorm(mean = 68, sd = 14)
pnorm(60 ,mean = 68, sd = 14)
pnorm(68 ,mean = 68, sd = 14)
pnorm(60 ,mean = 68, sd = 14)
qnorm(.95, mean = 68, sd = 14)
qnorm(.0, mean = 68, sd = 14)
qnorm(.01, mean = 68, sd = 14)
qnorm(.50, mean = 68, sd = 14)
qnorm(.95, mean = 68, sd = 14)
pnorm(80, mean = 68, sd = 14)
1 - pnorm(80, mean = 68, sd = 14)
pnorm(75, mean = 68, sd = 14) - pnorm(65, mean = 68, sd = 14)
knitr::opts_chunk$set(echo = TRUE)
chuck <- sample(1:6, size = 3, replace = TRUE)
chuck
chuck <- sample(1:6, size = 3, replace = TRUE)
chuck
chuck <- sample(1:6, size = 3, replace = TRUE)
chuck
chuck <- sample(1:6, size = 3, replace = TRUE)
chuck
sample(1:6, size = 3, replace = TRUE)
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
sum(bet == roll)
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
sum(bet == roll)
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
sum(bet == roll)
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
sum(bet == roll)
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
sum(bet == roll)
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
sum(bet == roll)
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
sum(bet == roll)
chuck <- function(k){
replicate(n = k,
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
chuck <- function(k){
replicate(n = k,
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
chuck <- function(k){
replicate(n = k,
bet<-sample(1:6,size = 1, replace = TRUE),
roll<-sample(1:6, size = 3, replace = TRUE)
num_mat <- sum(bet == roll)
replicate(n = k,
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
chuck <- function(k){
replicate(n = k,
bet<-sample(1:6,size = 1, replace = TRUE)
roll<-sample(1:6, size = 3, replace = TRUE)
chuck <- replicate(sample(1:6,3,replace = TRUE),100)
chuck <- replicate(sample(1:6,3,replace = TRUE), n =100)
View(chuck)
chuck <- replicate(sum(sample(1:6,1,replace = TRUE) == sample(1:6,3,replace = TRUE)), n =100)
chuck_dol <- ifelse(chuck == 0, -1, ifelse(chuck == 1, 1, ifelse(chuck == 2,2,ifelse(chuck==3,3,0))))
mean(chuck_dol)
chuck <- replicate(sum(sample(1:6,1,replace = TRUE) == sample(1:6,3,replace = TRUE)), n =100)
chuck_dol <- ifelse(chuck == 0, -1, ifelse(chuck == 1, 1, ifelse(chuck == 2,2,ifelse(chuck==3,3,0))))
mean(chuck_dol)
chuck <- replicate(sum(sample(1:6,1,replace = TRUE) == sample(1:6,3,replace = TRUE)), n =100)
chuck_dol <- ifelse(chuck == 0, -1, ifelse(chuck == 1, 1, ifelse(chuck == 2,2,ifelse(chuck==3,3,0))))
mean(chuck_dol)
gambler <- data.frame()
gambler <- data.frame(2)
gambler <- data.frame(2)
if (gambler[length(gambler)] > 0 & gambler[length(gambler)] < 4) {
out <- sum(sample(1:6,3,replace=T) == sample(1:6,1,replace=T))
if (out == 0) {
rbind(gambler, gambler[length(gambler)]-1)
}
if (out == 1) {
rbind(gambler, gambler[length(gambler)]+1)
}
if (out == 2) {
rbind(gambler, gambler[length(gambler)]+1)
}
if (out == 0) {
rbind(gambler, gambler[length(gambler)]+3)
}
}
if (gambler[length(gambler)] > 0 & gambler[length(gambler)] < 4) {
out <- sum(sample(1:6,3,replace=T) == sample(1:6,1,replace=T))
if (out == 0) {
rbind(gambler, gambler[length(gambler)]-1)
}
if (out == 1) {
rbind(gambler, gambler[length(gambler)]+1)
}
if (out == 2) {
rbind(gambler, gambler[length(gambler)]+1)
}
if (out == 0) {
rbind(gambler, gambler[length(gambler)]+3)
}
}print(gambler)
if (gambler[length(gambler)] > 0 & gambler[length(gambler)] < 4) {
out <- sum(sample(1:6,3,replace=T) == sample(1:6,1,replace=T))
if (out == 0) {
rbind(gambler, gambler[length(gambler)]-1)
}
if (out == 1) {
rbind(gambler, gambler[length(gambler)]+1)
}
if (out == 2) {
rbind(gambler, gambler[length(gambler)]+1)
}
if (out == 0) {
rbind(gambler, gambler[length(gambler)]+3)
}
} return(gambler)
gambler <- data.frame(2)
if (gambler[length(gambler)] > 0 & gambler[length(gambler)] < 4) {
out <- sum(sample(1:6,3,replace=T) == sample(1:6,1,replace=T))
if (out == 0) {
rbind(gambler, gambler[length(gambler)]-1)
}
if (out == 1) {
rbind(gambler, gambler[length(gambler)]+1)
}
if (out == 2) {
rbind(gambler, gambler[length(gambler)]+1)
}
if (out == 0) {
rbind(gambler, gambler[length(gambler)]+3)
}
} return(gambler)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 1 & cash[length(cash)] < 4) {
return(3)
}
}
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 1 & cash[length(cash)] < 4) {
return(3)
}
}
gambler(2,4)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 1 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
}
}
gambler(1,4)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 1 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
} return(cash)
gambler(1,4)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 1 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
} print(cash)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 1 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
}
return(cash)
}
gambler(1,4)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 1 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
}
return(cash)
}
gambler(1,4)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 1 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
}
return(cash)
}
gambler(1,4)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 0 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
}
return(cash)
}
gambler(1,4)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 0 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
}
return(cash)
}
gambler(1,4)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 0 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
}
return(cash)
}
gambler(1,4)
gambler(1,4)
gambler(1,4)
gambler(1,4)
gambler(1,4)
gambler(1,4)
gambler(1,4)
gambler(1,4)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 0 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
}
return(cash)
}
gambler(1,4)
gambler <- function(start, stop){
cash <- c(start)
if (cash[length(cash)] > 0 & cash[length(cash)] < stop) {
match <- sum(sample(1:6,3,replace=TRUE) == sample(1:6,1,replace=TRUE))
if (match == 0) {
cash <- c(cash, cash[length(cash)] - 1)
} else cash <- c(cash, cash[length(cash)] + match)
}
return(cash)
}
gambler(1,4)
library(kable)
install.packages("kable")
library(kable)
